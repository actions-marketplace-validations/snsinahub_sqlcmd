name: 'action yml'
description: 'dotnet restore'
inputs:
  sql_path:  
    description: 'sql_path'
    required: false
  server_name:  
    description: 'Server Name or IP address'
    required: true
  db_name:  
    description: 'db name'
    required: true  
  sqlcmd_variables:  
    description: 'file_extenstion'
    required: false
    default: ""
  query_timeout:  
    description: 'query_timeout'
    required: false
    default: ""
  sqlcmd_action:  
    description: 'sqlcmd_action'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - run: |       
        echo "sqlcmd scripts"        
        echo "Invoke-Sqlcmd -ServerInstance ${{ inputs.server_name }} -Database ${{ inputs.db_name }} -InputFile '${{ inputs.sql_path }}'"
        # Invoke-Sqlcmd -ServerInstance "${{ inputs.server_name }}" -Database "${{ inputs.db_name }}" -InputFile "${{ inputs.sql_path }}"
        $PS = "Invoke-Sqlcmd -ServerInstance ${{ inputs.server_name }} -Database ${{ inputs.db_name }} -InputFile ${{ inputs.sql_path }}"
        if ( "${{ inputs.sqlcmd_variables }}" != "") {
          $PS += " -Variable ${{ inputs.sqlcmd_variables }}"
        }

        if ("${{ inputs.query_timeout }}" != "") {
          $PS += " -QueryTimeOut ${{ inputs.query_timeout }}"
        }

        $command = [Scriptblock]::Create($PS)

        Invoke-Command -ScriptBlock $command


      id: sqlcmd-script          
      shell: powershell
      # if: ${{ inputs.sqlcmd_action == 'script' }}
    
    
    


      